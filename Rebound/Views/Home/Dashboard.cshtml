
@{
    ViewBag.Title = "Dashboard";
}
<div id="loderImg" style="display:none;">
    <div style="
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #00000069;
    z-index: 9999;
    display: flex;
    justify-content: center;
    align-items: center;">
        <img id="loading-image" src="~/Uploads/assets/ajax-loader.gif" height="50" />
    </div>
</div>
<div class="row">

    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1 d-flex justify-content-between">
                            Cash 
                            <i class="fas fa-money-check-alt fa-2x text-gray-300"></i>
                        </div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800">LBP <span id="earnM"></span></div>
                    </div>
                    <div class="col">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1 d-flex justify-content-between">
                            Monthly payment
                            <i class="fas fa-money-check-alt fa-2x text-gray-300"></i>
                        </div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800">LBP <span id="monthTotal"></span></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col  mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1 d-flex justify-content-between">
                            Total
                            <i class="fas fa-money-check-alt fa-2x text-gray-300"></i>
                        </div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800">LBP <span id="earnTotal"></span></div>
                    </div>
                    
                    <div class="col">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1 d-flex justify-content-between">
                            Paid amount
                            <i class="fas fa-money-check-alt fa-2x text-gray-300"></i>
                        </div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800">LBP <span id="paidTotal"></span></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1 d-flex justify-content-between">
                            Reservations
                            <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                        </div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800"><span id="reservationC"></span></div>
                    </div>
                    <div class="col">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1 d-flex justify-content-between">
                            Ball Rental
                            <i class="fas fa-basketball-ball fa-2x text-gray-300"></i>
                        </div>
                        <div class="h6 mb-0 font-weight-bold text-gray-800"><span id="earnY"></span></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pending Requests Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Our Customers</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800"><span id="customerC"></span></div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-comments fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class=" col-sm-12">
        <div class="card shadow mb-4">
            <div class="card-header d-sm-flex justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Top customers </h6>
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" data-toggle="tab" href="#byres">Reservation</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#byamou">Amount</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#bypay">Paid</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#bycancel">Canceled </a>
                    </li>
                </ul>
            </div>
            <div class="card-body  tab-content">
                <div class="tab-pane active" id="byres">
                    <table class="table table-responsive-md table-bordered p-0 m-0" id="dataTablecustomerReserve" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Mobile</th>
                                <th>Email</th>
                                <th>Count</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="tab-pane" id="byamou">
                    <table class="table table-responsive-md table-bordered p-0 m-0" id="dataTablecustomerAmount" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Mobile</th>
                                <th>Email</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class=" tab-pane" id="bypay">
                    <table class="table table-responsive-md table-bordered p-0 m-0" id="dataTablecustomerPaid" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Mobile</th>
                                <th>Email</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class=" tab-pane" id="bycancel">
                    <table class="table table-responsive-md table-bordered p-0 m-0" id="dataTablecustomerCancel" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Mobile</th>
                                <th>Email</th>
                                <th>Count</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Content Row -->
<div class="row">

    <div class="col-xl-8 col-lg-7">

        <!-- Area Chart -->
        <div class="card shadow mb-4">
            <div class="card-header d-flex justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Transactions</h6>
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" data-toggle="tab" href="#one">By Month</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#two">By Week</a>
                    </li>
                </ul>
            </div>
            <div class="card-body tab-content">
                <div class="chart-area tab-pane active" id="one">
                    <canvas id="renderTransactionbyM"></canvas>
                </div>
                <div class="chart-area tab-pane" id="two">
                    <canvas id="renderTransactionbyW"></canvas>
                </div>
            </div>
        </div>

        <!-- Bar Chart -->


        <div class="card shadow mb-4">
            <div class="card-header d-flex justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Reservations</h6>
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" data-toggle="tab" href="#three">By Month</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#four">By Week</a>
                    </li>
                </ul>
            </div>
            <div class="card-body tab-content">
                <div class="chart-area tab-pane active" id="three">
                    <canvas id="myAreaReservationM"></canvas>
                </div>
                <div class="chart-area tab-pane" id="four">
                    <canvas id="myAreaReservationW"></canvas>
                </div>
            </div>
        </div>
        <div class="card shadow mb-4">
            <div class="card-header d-flex justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Ball rental report</h6>
            </div>
            <div class="card-body">
                <div class="chart-area" id="ballCArea">
                    <canvas id="ballRentalChart"></canvas>
                </div>
            </div>
        </div>

    </div>

    <!-- Donut Chart -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <div class="card-header d-sm-flex justify-content-sm-between">
                <h6 class="m-0 font-weight-bold text-primary p-0 col-sm-4">Item details</h6>
                <ul class="nav nav-tabs card-header-tabs m-0 p-0 col-sm-8 d-flex justify-content-end">

                    <li class="nav-item">
                        <a class="nav-link active" data-toggle="tab" href="#itemcAmo">Amount</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link " data-toggle="tab" href="#itemcQnt">Res. Numbers</a>
                    </li>
                </ul>
            </div>
            <!-- Card Body -->
            <div class="card-body tab-content">
                <div class="chart-area tab-pane active" id="itemcAmo">
                    <canvas id="renderItemBarbyrev"></canvas>
                </div>
                <div class="chart-area tab-pane" id="itemcQnt">
                    <canvas id="renderItemBarbyqnt"></canvas>
                </div>
            </div>
        </div>

        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header d-sm-flex justify-content-sm-between">
                <h6 class="m-0 font-weight-bold text-primary">Item Detail</h6>
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" data-toggle="tab" href="#itemQnt">Res. Numbers</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#itemAmo">Amount</a>
                    </li>
                </ul>
            </div>
            <!-- Card Body -->
            <div class="card-body tab-content">
                <div class="tab-pane active" id="itemQnt">
                    <table class="table table-bordered p-0 m-0" id="dataTableItem" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Count</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="tab-pane " id="itemAmo">
                    <table class="table table-bordered p-0 m-0" id="dataTablerevenue" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>

<!-- /.container-fluid -->

@section Scripts{


    <script>

        $(function () {

            var start = moment();
            var end = moment();

            function cb(start, end) {
                $('#startdate').val(start.format('YYYY-MM-DD'));
                $('#enddate').val(end.format('YYYY-MM-DD'));

                $('#dataTablecustomerReserve').DataTable().ajax.reload();
                $('#dataTablecustomerAmount').DataTable().ajax.reload();
                $('#dataTablecustomerPaid').DataTable().ajax.reload();
                $('#dataTablecustomerCancel').DataTable().ajax.reload();
                $('#dataTableItem').DataTable().ajax.reload();
                $('#dataTablerevenue').DataTable().ajax.reload();
                var s = start.format('YYYY-MM-DD');
                var e = end.format('YYYY-MM-DD');
                GetCount(s, e);

            };
            $('input[name="daterange"]').daterangepicker({
                opens: 'left',
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                    'This Year': [moment().startOf('year'), moment().endOf('year')],
                }
            },
                cb
            );
            cb(start, end);
        });

        document.addEventListener('DOMContentLoaded', function () {
            var startYear = moment().startOf('day').format('MM/DD/YYYY');
            var endYear = moment().endOf('day').format('MM/DD/YYYY');
            $('#startdate').val(startYear);
            $('#enddate').val(endYear);

            $('.datepicke').datepicker({ format: 'YYYY-MM-DD' });

            $('#dataTablecustomerReserve').DataTable({
                "order": [[4, "desc"]],
                "pageLength": 15,
                "ajax": {
                    "url": "/Report/GetTopCustomerbyRes",
                    "data": function (d) {
                        d.start = $('#startdate').val(),
                            d.end = $('#enddate').val()
                    },
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "code" },
                    { "data": "name" },
                    { "data": "mobile" },
                    { "data": "email" },
                    { "data": "count" },
                ],
                dom: "Bft",
                buttons: [
                    {
                        extend: 'excel',
                        className: 'Button',
                        text: '<i class="fas fa-file-excel" aria-hidden="true"></i> Export to Excel '
                    },
                ],
            });


            $('#dataTablecustomerAmount').DataTable({
                "order": [[4, "desc"]],
                "pageLength": 15,
                "ajax": {
                    "url": "/Report/GetTopCustomerbyAmount",
                    "data": function (d) {
                        d.start = $('#startdate').val(),
                            d.end = $('#enddate').val()
                    },
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "code" },
                    { "data": "name" },
                    { "data": "mobile" },
                    { "data": "email" },
                    { "data": "count" },
                ],
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                dom: "Bft",
                buttons: [
                    {
                        extend: 'excel',
                        className: 'Button',
                        text: '<i class="fas fa-file-excel" aria-hidden="true"></i> Export to Excel '
                    },
                ],
            });
            $('#dataTablecustomerPaid').DataTable({
                "order": [[4, "desc"]],
                "pageLength": 15,
                "ajax": {
                    "url": "/Report/GetTopCustomerbyPaid",
                    "data": function (d) {
                        d.start = $('#startdate').val(),
                            d.end = $('#enddate').val()
                    },
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "code" },
                    { "data": "name" },
                    { "data": "mobile" },
                    { "data": "email" },
                    { "data": "count" },
                ],
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                dom: "Bft",
                buttons: [
                    {
                        extend: 'excel',
                        className: 'Button',
                        text: '<i class="fas fa-file-excel" aria-hidden="true"></i> Export to Excel '
                    },
                ],
            });

            $('#dataTablecustomerCancel').DataTable({
                "order": [[4, "desc"]],
                "pageLength": 15,
                "ajax": {
                    "url": "/Report/GetTopCustomerbyCancel",
                    "data": function (d) {
                        d.start = $('#startdate').val(),
                            d.end = $('#enddate').val()
                    },
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "code" },
                    { "data": "name" },
                    { "data": "mobile" },
                    { "data": "email" },
                    { "data": "count" },
                ],
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                dom: "Bft",
                buttons: [
                    {
                        extend: 'excel',
                        className: 'Button',
                        text: '<i class="fas fa-file-excel" aria-hidden="true"></i> Export to Excel '
                    },
                ],
            });

            $('#dataTableItem').DataTable({
                "pageLength": 10,
                "order": [[1, "desc"]],
                "ajax": {
                    "url": "/Report/GetTopItem",
                    "type": "GET",
                    "data": function (d) {
                        d.start = $('#startdate').val(),
                            d.end = $('#enddate').val()
                    },
                    "datatype": "json"
                },
                "columns": [
                    { "data": "name" },
                    { "data": "count" },
                ],
                dom: "tp",
            });


            $('#dataTablerevenue').DataTable({
                "pageLength": 10,
                "order": [[1, "desc"]],
                "ajax": {
                    "url": "/Report/GetTopitemsrevenue",
                    "type": "GET",
                    "data": function (d) {
                        d.start = $('#startdate').val(),
                            d.end = $('#enddate').val()
                    },
                    "datatype": "json"
                },
                "columns": [
                    { "data": "name" },
                    { "data": "count" },
                ],
                dom: "tp",
            });

        });



        function GetCount(start, end) {
            if (start == null) {
                start = moment().startOf('month').format('MM/DD/YYYY');
            };
            if (end == null) {
                end = moment().endOf('month').format('MM/DD/YYYY');
            };

            $("canvas#renderTransactionbyM").remove();
            $("canvas#renderTransactionbyW").remove();
            $("canvas#myAreaReservationM").remove();
            $("canvas#myAreaReservationW").remove();
            $("canvas#renderItemBarbyrev").remove();
            $("canvas#renderItemBarbyqnt").remove();
            $("canvas#ballRentalChart").remove();

            $("#one").append('<canvas id="renderTransactionbyM"></canvas>');
            $("#two").append('<canvas id="renderTransactionbyW"></canvas>');
            $("#three").append('<canvas id="myAreaReservationM"></canvas>');
            $("#four").append('<canvas id="myAreaReservationW"></canvas>');
            $("#itemcAmo").append('<canvas id="renderItemBarbyrev"></canvas>');
            $("#itemcQnt").append('<canvas id="renderItemBarbyqnt"></canvas>');
            $("#ballCArea").append('<canvas id="ballRentalChart"></canvas>');

            $.ajax({
                type: "Get",
                url: '/Report/GetCount',
                data: { 'start': start, 'end': end },
                beforeSend: function () {
                    $("#loderImg").show();
                },
                success: function (data) {
                    if (data != null) {
                        console.log(data);
                        if (data.satus == true) {
                            $('#earnM').text(data.mEarning);
                            $('#monthTotal').text(data.monthEarning);
                            $('#paidTotal').text(data.mPaid);
                            $('#earnTotal').text(data.tAmount);

                            $('#earnY').text(data.getBall);
                            $('#customerC').text(data.Customer);
                            $('#reservationC').text(data.resurvationC);

                            var labelsT = [];
                            var daat1T = [];
                            var daat2T = [];

                            var labelsTW = [];
                            var daat1TW = [];
                            var daat2TW = [];

                            var labelsr = [];
                            var daat1r = [];
                            var daat2r = [];

                            var labelsrW = [];
                            var daat1rW = [];
                            var daat2rW = [];

                            var itemdataq = [];
                            var itemdatav = [];
                            var itemdatan = [];

                            var itemdatad = [];

                            var itemdatac = [];

                            //init


                            labelsT = data.monthlistT;
                            daat1T = data.sumlistT;
                            daat2T = data.sumlistT2;

                            labelsTW = data.weeklistT;
                            daat1TW = data.weeksumlistT;
                            daat2TW = data.weeksumlistT2;

                            labelsr = data.monthlistR;
                            daat1r = data.countlistR;
                            daat2r = data.countlistR2;

                            labelsrW = data.weeklistR;
                            daat1rW = data.weeksumlistR;
                            daat2rW = data.weeksumlistR2;

                            itemdataq = data.itemq;
                            itemdatav = data.itemv;
                            itemdatan = data.itemn;

                            itemdatad = data.ballrentD;

                            itemdatac = data.ballrentC;

                            renderAreaChart(id = "renderTransactionbyM", data = daat1T, data2 = daat2T, labels = labelsT, legent = "Month");
                            renderAreaChart(id = "renderTransactionbyW", data = daat1TW, data2 = daat2TW, labels = labelsTW, legent = "Week");

                            renderAreaChart(id = "myAreaReservationM", data = daat1r, data2 = daat2r, labels = labelsr, legent = "Month");
                            renderAreaChart(id = "myAreaReservationW", data = daat1rW, data2 = daat2rW, labels = labelsrW, legent = "Week");

                            renderBarChart(id = "renderItemBarbyrev", data = itemdatav, labels = itemdatan, legent = "By items revenue");

                            renderBarChart(id = "renderItemBarbyqnt", data = itemdataq, labels = itemdatan, legent = "By items quantity");

                            renderBarChart(id = "ballRentalChart", data = itemdatac, labels = itemdatad, legent = "By ball rental");
                        } else {

                            $('#earnM').text(0);
                            $('#earnTotal').text(0);
                            $('#paidTotal').text(0);

                            $('#earnY').text(0);
                            $('#customerC').text(0);
                            $('#reservationC').text(0);



                            renderAreaChart(id = "renderTransactionbyM", data = [], data2 = [], labels = [], legent = "Month");
                            renderAreaChart(id = "renderTransactionbyW", data = [], data2 = [], labels = [], legent = "Week");

                            renderAreaChart(id = "myAreaReservationM", data = [], data2 = [], labels = [], legent = "Month");
                            renderAreaChart(id = "myAreaReservationW", data = [], data2 = [], labels = [], legent = "Week");

                            renderBarChart(id = "renderItemBarbyrev", data = [], labels = [], legent = "By items revenue");

                            renderBarChart(id = "renderItemBarbyqnt", data = [], labels = [], legent = "By items quantity");

                            renderBarChart(id = "ballRentalChart", data = [], labels = [], legent = "By ball rental");
                        }



                        $("#loderImg").hide();

                    }
                },
                error: function () {
                    alert('Failed');
                }
            })
        }

        window.onload = function () {

            var start = $('#startdate').val();
            end = $('#enddate').val();

            GetCount(start, end);
        }

        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';

        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }

        function renderAreaChart(id, data, data2, labels, legent) {
            // Area Chart Example
            var ctx = document.getElementById(id);
            var myLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: "This " + legent,
                        lineTension: 0.3,
                        backgroundColor: "rgba(78, 115, 223, 0.05)",
                        borderColor: "rgba(78, 115, 223, 1)",
                        pointRadius: 3,
                        pointBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointBorderColor: "rgba(78, 115, 223, 1)",
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        data: data,
                    },
                    {
                        label: "Last " + legent,
                        lineTension: 0.3,
                        backgroundColor: "rgba(78, 115, 123, 0.05)",
                        borderColor: "rgba(78, 115, 123, 1)",
                        pointRadius: 3,
                        pointBackgroundColor: "rgba(78, 115, 123, 1)",
                        pointBorderColor: "rgba(78, 115, 123, 1)",
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: "rgba(78, 115, 123, 1)",
                        pointHoverBorderColor: "rgba(78, 115, 123, 1)",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        data: data2,
                    }
                    ],
                },
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'date'
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                maxTicksLimit: 7
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                maxTicksLimit: 5,
                                padding: 10,
                                // Include a dollar sign in the ticks
                                callback: function (value, index, values) {
                                    return number_format(value);
                                }
                            },
                            gridLines: {
                                color: "rgb(234, 236, 244)",
                                zeroLineColor: "rgb(234, 236, 244)",
                                drawBorder: false,
                                borderDash: [2],
                                zeroLineBorderDash: [2]
                            }
                        }],
                    },
                    legend: {
                        display: true
                    },
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        titleMarginBottom: 10,
                        titleFontColor: '#6e707e',
                        titleFontSize: 14,
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        intersect: false,
                        mode: 'index',
                        caretPadding: 10,
                        callbacks: {
                            label: function (tooltipItem, chart) {
                                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                            }
                        }
                    }
                }
            });
            myLineChart.clear();
            myLineChart.destroy();

            myLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: "This " + legent,
                        lineTension: 0.3,
                        backgroundColor: "rgba(78, 115, 223, 0.05)",
                        borderColor: "rgba(78, 115, 223, 1)",
                        pointRadius: 3,
                        pointBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointBorderColor: "rgba(78, 115, 223, 1)",
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        data: data,
                    },
                    {
                        label: "Last " + legent,
                        lineTension: 0.3,
                        backgroundColor: "rgba(78, 115, 123, 0.05)",
                        borderColor: "rgba(78, 115, 123, 1)",
                        pointRadius: 3,
                        pointBackgroundColor: "rgba(78, 115, 123, 1)",
                        pointBorderColor: "rgba(78, 115, 123, 1)",
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: "rgba(78, 115, 123, 1)",
                        pointHoverBorderColor: "rgba(78, 115, 123, 1)",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        data: data2,
                    }
                    ],
                },
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'date'
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                maxTicksLimit: 7
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                maxTicksLimit: 5,
                                padding: 10,
                                // Include a dollar sign in the ticks
                                callback: function (value, index, values) {
                                    return number_format(value);
                                }
                            },
                            gridLines: {
                                color: "rgb(234, 236, 244)",
                                zeroLineColor: "rgb(234, 236, 244)",
                                drawBorder: false,
                                borderDash: [2],
                                zeroLineBorderDash: [2]
                            }
                        }],
                    },
                    legend: {
                        display: true
                    },
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        titleMarginBottom: 10,
                        titleFontColor: '#6e707e',
                        titleFontSize: 14,
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        intersect: false,
                        mode: 'index',
                        caretPadding: 10,
                        callbacks: {
                            label: function (tooltipItem, chart) {
                                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                            }
                        }
                    }
                }
            });
        };
        function renderBarChart(id, data, labels, legent) {
            // Bar Chart Example
            var ctx = document.getElementById(id);
            var myBarChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: legent,
                        backgroundColor: "#4e73df",
                        hoverBackgroundColor: "#2e59d9",
                        borderColor: "#4e73df",
                        data: data,
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'month'
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            maxBarThickness: 31,
                        }],
                        yAxes: [{
                            ticks: {
                                min: 0,
                                padding: 10,
                                callback: function (value, index, values) {
                                    return number_format(value);
                                }
                            },
                            gridLines: {
                                color: "rgb(234, 236, 244)",
                                zeroLineColor: "rgb(234, 236, 244)",
                                drawBorder: false,
                                borderDash: [2],
                                zeroLineBorderDash: [2]
                            }
                        }],
                    },
                    legend: {
                        display: true
                    },
                    tooltips: {
                        titleMarginBottom: 10,
                        titleFontColor: '#6e707e',
                        titleFontSize: 14,
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                        callbacks: {
                            label: function (tooltipItem, chart) {
                                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                return datasetLabel + ' ' + number_format(tooltipItem.yLabel);
                            }
                        }
                    },
                }
            });
        };
    </script>
}
