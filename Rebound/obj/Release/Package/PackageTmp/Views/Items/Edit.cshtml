@model Rebound.Models.Item

@{
    ViewBag.Title = "Update";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="card border-info">
            <div class="card-header  d-flex justify-content-between flex-wrap">
                <h6 class="m-0 font-weight-bold text-primary mr-5">Update Item </h6>
                <a href="@Url.Action("Index","Items")" class="btn btn-primary"><i class="fas fa-list"></i> Items</a>
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="w-100 d-sm-flex p-sm-0">
                    <div class="form-group col-sm-6 p-sm-0 d-sm-flex">
                        @Html.LabelFor(m => m.Name, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-6 p-sm-0 d-sm-flex">
                        @Html.LabelFor(m => m.CategoryId, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="w-100 d-sm-flex p-sm-0">
                    <div class="form-group col-sm-2">
                        <label>
                            @Html.EditorFor(m => m.Published, new { htmlAttributes = new { @class = "checkbox" } })
                            @Html.LabelFor(m => m.Published, new { @class = "control-label" })
                        </label>
                    </div>
                    <div class="form-group col-sm-4 p-sm-0 d-sm-flex">
                        @Html.LabelFor(m => m.Price, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-6 p-sm-0 d-sm-flex">
                        @Html.LabelFor(m => m.ShortDescription, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.EditorFor(m => m.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer border-info bg-info">
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" class="btn btn-outline-light float-md-right" value="Update Item" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
