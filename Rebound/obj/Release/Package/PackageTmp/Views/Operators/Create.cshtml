@model Rebound.Models.OperatorsVm

@{
    ViewBag.Title = "Add operators";
}

@using (Html.BeginForm()) 
{
   
    <div class="form-horizontal">

        @Html.AntiForgeryToken()
        <div class="card border-info">
            <div class="card-header bg-white d-flex justify-content-between">
               
                <h6 class="m-0 font-weight-bold text-primary"> Create a new operator</h6>
                <a href="@Url.Action("Index","Operators")" class="btn btn-primary"><i class="fas fa-list-ul"></i> Operators</a>
            </div>
            <div class="card-body">
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="form-group d-sm-flex">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(m => m.Email, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group d-sm-flex">
                    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(m => m.FirstName,new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group d-sm-flex">
                    @Html.LabelFor(m => m.LastName, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(m => m.LastName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="w-100 d-sm-flex p-sm-0">
                    <div class="form-group col-sm-4 p-sm-0 d-sm-flex">
                        @Html.LabelFor(m => m.Gender, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-4 p-sm-0 d-sm-flex">
                        @Html.LabelFor(m => m.Mobile, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.EditorFor(m => m.Mobile, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-4 p-sm-0 d-sm-flex">
                        @Html.LabelFor(m => m.Phone, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.EditorFor(m => m.Phone, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="form-group d-sm-flex">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group d-sm-flex">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="card-footer border-info bg-info">
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" class="btn btn-outline-light float-md-right" value="Register" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
